name: Publish
on:
  workflow_dispatch:
    inputs:
      deploy_api_reference:
        description: 'Deploy API Reference?'
        required: true
        default: true
        type: boolean

jobs:
  publish:
    runs-on: macos-15

    permissions:
      contents: write

    env:
      RELEASE_PAGES_BRANCH: main

    steps:
      - name: Check branch
        if: ${{ !contains(github.ref, 'refs/heads/release/') }}
        run: |
          echo "This action runs only on branches that start with 'release/'"
          exit 1

      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Create Release Tag
        run: |
            export VERSION=$(cat gradle.properties | grep "version" | awk -F '=' '{print $2}') && \
            gh config set prompt disabled && \
            gh release create \
              --target "$GITHUB_REF_NAME" \
              --title "$VERSION" \
              --generate-notes \
              $VERSION
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup JDK
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@ac638b010cf58a27ee6c972d7336334ccaf61c96 # v4.4.1

      - name: Set Xcode version
        # ref. https://www.jetbrains.com/help/kotlin-multiplatform-dev/multiplatform-compatibility-guide.html#version-compatibility
        run: sudo xcode-select -s /Applications/Xcode_16.3.app

      - name: Publish to Maven Central
        run: ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_KEY_PASSWORD }}

      - name: Build API Reference
        if: ${{ github.event.inputs.deploy_api_reference == 'true' }}
        run: ./gradlew dokkaGeneratePublicationHtml

      - name: Deploy API Reference to Cloudflare Pages
        if: ${{ github.event.inputs.deploy_api_reference == 'true' }}
        uses: cloudflare/wrangler-action@da0e0dfe58b7a431659754fdf3f186c529afbe65 # v3.14.1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_PAGES_DEPLOY_API_TOKEN }}
          command: pages deploy build/dokka/html --project-name=soil-api-reference --branch ${{ env.RELEASE_PAGES_BRANCH }}
